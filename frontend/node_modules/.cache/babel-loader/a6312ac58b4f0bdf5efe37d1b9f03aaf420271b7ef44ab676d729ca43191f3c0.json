{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Get All Products\nexport const getProducts = (filters = {}) => async dispatch => {\n  try {\n    dispatch({\n      type: 'PRODUCTS_LOADING'\n    });\n    const queryParams = new URLSearchParams();\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value) queryParams.append(key, value);\n    });\n    const response = await axios.get(`${API_URL}/products?${queryParams}`);\n    dispatch({\n      type: 'PRODUCTS_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n    dispatch({\n      type: 'PRODUCTS_ERROR',\n      payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch products'\n    });\n  }\n};\n\n// Get Single Product\nexport const getProduct = id => async dispatch => {\n  try {\n    dispatch({\n      type: 'PRODUCT_DETAIL_LOADING'\n    });\n    const response = await axios.get(`${API_URL}/products/${id}`);\n    dispatch({\n      type: 'PRODUCT_DETAIL_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    dispatch({\n      type: 'PRODUCT_DETAIL_ERROR',\n      payload: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch product'\n    });\n  }\n};\n\n// Get Featured Products\nexport const getFeaturedProducts = () => async dispatch => {\n  try {\n    const response = await axios.get(`${API_URL}/products/featured/all`);\n    dispatch({\n      type: 'FEATURED_PRODUCTS_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    console.error('Failed to fetch featured products:', error);\n  }\n};\n\n// Get New Arrivals\nexport const getNewArrivals = () => async dispatch => {\n  try {\n    const response = await axios.get(`${API_URL}/products/new-arrivals/all`);\n    dispatch({\n      type: 'NEW_ARRIVALS_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    console.error('Failed to fetch new arrivals:', error);\n  }\n};\n\n// Clear Current Product\nexport const clearCurrentProduct = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_CURRENT_PRODUCT'\n  });\n};","map":{"version":3,"names":["axios","API_URL","getProducts","filters","dispatch","type","queryParams","URLSearchParams","Object","entries","forEach","key","value","append","response","get","payload","data","error","_error$response","_error$response$data","message","getProduct","id","_error$response2","_error$response2$data","getFeaturedProducts","console","getNewArrivals","clearCurrentProduct"],"sources":["C:/COLLAGE PROJECT/SEM-4 PROJECT/fsd/FashionX/frontend/src/redux/actions/productActions.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api';\n\n// Get All Products\nexport const getProducts = (filters = {}) => async (dispatch) => {\n  try {\n    dispatch({ type: 'PRODUCTS_LOADING' });\n    \n    const queryParams = new URLSearchParams();\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value) queryParams.append(key, value);\n    });\n    \n    const response = await axios.get(`${API_URL}/products?${queryParams}`);\n\n    dispatch({\n      type: 'PRODUCTS_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'PRODUCTS_ERROR',\n      payload: error.response?.data?.message || 'Failed to fetch products'\n    });\n  }\n};\n\n// Get Single Product\nexport const getProduct = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: 'PRODUCT_DETAIL_LOADING' });\n    \n    const response = await axios.get(`${API_URL}/products/${id}`);\n\n    dispatch({\n      type: 'PRODUCT_DETAIL_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'PRODUCT_DETAIL_ERROR',\n      payload: error.response?.data?.message || 'Failed to fetch product'\n    });\n  }\n};\n\n// Get Featured Products\nexport const getFeaturedProducts = () => async (dispatch) => {\n  try {\n    const response = await axios.get(`${API_URL}/products/featured/all`);\n\n    dispatch({\n      type: 'FEATURED_PRODUCTS_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    console.error('Failed to fetch featured products:', error);\n  }\n};\n\n// Get New Arrivals\nexport const getNewArrivals = () => async (dispatch) => {\n  try {\n    const response = await axios.get(`${API_URL}/products/new-arrivals/all`);\n\n    dispatch({\n      type: 'NEW_ARRIVALS_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    console.error('Failed to fetch new arrivals:', error);\n  }\n};\n\n// Clear Current Product\nexport const clearCurrentProduct = () => (dispatch) => {\n  dispatch({ type: 'CLEAR_CURRENT_PRODUCT' });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}